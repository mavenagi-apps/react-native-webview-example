/**
 * Sample React Native App with Maven Chat Integration
 * https://github.com/facebook/react-native
 *
 * @format
 */

import React, { useState } from 'react';
import {
  Button,
  Modal,
  StatusBar,
  StyleSheet,
  Text,
  TouchableOpacity,
  useColorScheme,
  View,
} from 'react-native';
import {
  SafeAreaProvider,
  useSafeAreaInsets,
} from 'react-native-safe-area-context';
import CustomSupportScreen from './CustomSupportScreen';
import { MAVEN_CONFIG } from './maven-config';

// Maven config is auto-generated by: node setup-maven-keys.js
// To update: 
// 1. Edit MAVEN_ORG_ID and MAVEN_AGENT_ID in .env
// 2. Run: node setup-maven-keys.js
// The script will regenerate maven-config.js with a fresh JWT token

function App() {
  const isDarkMode = useColorScheme() === 'dark';
  const [isChatOpen, setIsChatOpen] = useState(false);
  const [currentScreen, setCurrentScreen] = useState('Home');

  return (
    <SafeAreaProvider>
      <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />
      <AppContent 
        onOpenChat={() => setIsChatOpen(true)}
        onScreenChange={setCurrentScreen}
      />
      <Modal
        visible={isChatOpen}
        animationType="slide"
        presentationStyle="fullScreen"
        onRequestClose={() => setIsChatOpen(false)}
      >
        <CustomSupportScreen
          organizationId={MAVEN_CONFIG.organizationId}
          agentId={MAVEN_CONFIG.agentId}
          signedUserData={MAVEN_CONFIG.signedUserData}
          currentScreen={currentScreen}
          onClose={() => setIsChatOpen(false)}
        />
      </Modal>
    </SafeAreaProvider>
  );
}

function AppContent({ 
  onOpenChat, 
  onScreenChange 
}: { 
  onOpenChat: () => void;
  onScreenChange: (screen: string) => void;
}) {
  const safeAreaInsets = useSafeAreaInsets();

  // Update screen name when component mounts
  React.useEffect(() => {
    onScreenChange('Home');
  }, [onScreenChange]);

  return (
    <View style={styles.container}>
      <View style={styles.content}>
        <Text style={styles.title}>Welcome to BarryTestMobileApp</Text>
        <Text style={styles.subtitle}>
          React Native with Maven AGI Chat Integration
        </Text>
        
        <View style={styles.buttonContainer}>
          <Button
            title="Open Maven Chat Support"
            onPress={onOpenChat}
            color="#6C2BD9"
          />
        </View>
        
        <View style={styles.instructions}>
          <Text style={styles.instructionText}>
            ðŸŽ¯ Demo Mode Active{'\n\n'}
            Currently using demo credentials (anonymous chat).{'\n\n'}
            To enable authentication:{'\n'}
            1. Generate ES256 keypair & encryption secret{'\n'}
            2. Configure Maven Chat app with keys{'\n'}
            3. Implement backend JWT endpoint{'\n'}
            4. Update App.tsx to fetch JWT{'\n\n'}
            See MOBILE_SETUP_GUIDE.md for details
          </Text>
        </View>
      </View>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f5f5f5',
  },
  content: {
    flex: 1,
    padding: 20,
    justifyContent: 'center',
  },
  title: {
    fontSize: 28,
    fontWeight: 'bold',
    textAlign: 'center',
    marginBottom: 10,
    color: '#333',
  },
  subtitle: {
    fontSize: 16,
    textAlign: 'center',
    marginBottom: 40,
    color: '#666',
  },
  buttonContainer: {
    marginVertical: 20,
  },
  instructions: {
    marginTop: 40,
    padding: 20,
    backgroundColor: '#fff',
    borderRadius: 12,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  instructionText: {
    fontSize: 14,
    lineHeight: 22,
    color: '#555',
  },
  modalHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    padding: 16,
    backgroundColor: '#fff',
    borderBottomWidth: 1,
    borderBottomColor: '#e0e0e0',
  },
  modalTitle: {
    fontSize: 18,
    fontWeight: '600',
    color: '#333',
  },
  closeButton: {
    padding: 8,
  },
  closeButtonText: {
    fontSize: 16,
    color: '#6C2BD9',
    fontWeight: '600',
  },
});

export default App;
